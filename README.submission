Homework4 hot swap


Make sure you have activity and activity2, and ng images



In hw4-hotswap folder:

    Edited docker-compose.yml
        - essentially only added a web2 to the file that uses the image activity2

    Added swap1to2.sh
        - a script that:
            - brings up activity2
            - runs swap2.sh script
            - kills activity container

    Added swap2to1.sh
        - a script that:
            - brings up activity1
            - runs swap1.sh script
            - kills activity2 container


In nginx-rev directory:

	Added swap1.sh.
	    - It has identical commands to swap2.sh, but instead of swapping web1 to web2, it swaps
	    web2 with web1. Needed so we can swap back and forth.

	- IMPORTANT, make sure you “docker build -t ng .” in this directory, it’s used as the proxy in
	docker-compose.yml



After that go back out and run ./dorun.sh,

	- If done correctly, localhost:8888 should show the original Github Stalker page


For automatic hotswaps, via commandline:

    - ./swap1to2.sh
        - for swapping web1 to web2
        - localhost:8888 should now show the updated Github Stalker page
    - ./swap2to1.sh
        - for swapping web2 to web1
        - localhost:8888 show now show the original Github Stalker page


For manual hotswaps:

	- For hotswap web1 to web2: via command line, do:
	    1) docker exec ecs189_proxy_1 /bin/bash /bin/swap2.sh
	        - swaps web1 with web2
	    2) docker ps -a
	        - find the container ID of activity
	    3) docker rm CONTAINER_ID -f
	        - remove activity
		- This swaps web1 with web2
		- localhost:8888 should now show the updated Github Stalker page

	- For hotswap web2 to web1: via command line, do:
	    1) docker exec ecs189_proxy_1 /bin/bash /bin/swap1.sh
	        - swaps web2 with web1
	    2) docker ps -a
	        - find the container ID of activity2
	    3) docker rm CONTAINER_ID -f
	        - remove activity2
		- This swaps web2 with web1
		- localhost:8888 show now show the original Github Stalker page

